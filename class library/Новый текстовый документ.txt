using System.Net;
using System.Net.Mail;


namespace testemail
{
    public partial class Form1 : Form
    {
        private Dictionary<string, List<string>> signalMatchingList;
        public Form1()
        {

            InitializeComponent();

        }

        private void Form1_Load(object sender, EventArgs e)
        {
            signalMatchingList = new Dictionary<string, List<string>>();
            signalMatchingList.Add("1", new List<string>() { "andrey@mail.ru", "cat@mail.ru" });
            signalMatchingList.Add("2", new List<string>() { "andrey@gmail.com", "cat@gmail.com" });
            signalMatchingList.Add("3", new List<string>() { "dog@gmail.com", "pat@gmail.com" });
            signalMatchingList.Add("4", new List<string>() { "dog1@gmail.com", "pat1@gmail.com" });
            signalMatchingList.Add("5", new List<string>() { "dog2@gmail.com", "pat2@gmail.com" });
            signalMatchingList.Add("6", new List<string>() { "dog3@gmail.com", "pat3@gmail.com" });
            signalMatchingList.Add("7", new List<string>() { "dog4@gmail.com", "pat4@gmail.com" });
            signalMatchingList.Add("8", new List<string>() { "dog5@gmail.com", "pat5@gmail.com" });
            AddDestinationForSignal("2", "ХУЙ");

            if (true)
            {
                MessageBox.Show("");
            }
        }

        public void EditSignal(string signal)
        {
            List<string> emailList = null;
            MailAddress from = new MailAddress("smartrandle@gmail.com", "Тест");

            if (signalMatchingList.ContainsKey(signal))
            {
                emailList = signalMatchingList[signal];
            }

            foreach (var email in emailList)
            {

                MailAddress to = new MailAddress(email);
                MailMessage m = new MailMessage(from, to);
                // тема письма
                m.Subject = "Тест";
                // текст письма
                m.Body = "<h2>" + signal + "</h2>";
                // письмо представляет код html
                m.IsBodyHtml = true;
                // адрес smtp-сервера и порт, с которого будем отправлять письмо
                SmtpClient smtp = new SmtpClient("smtp.gmail.com", 587);
                // логин и пароль
                smtp.Credentials = new NetworkCredential("somemail@gmail.com", "mypassword");
                smtp.EnableSsl = true;
                smtp.Send(m);
            }
        }

        public void AddDestinationForSignal(string mail, string signal)
        {
            signalMatchingList[signal].Add(mail);
        }

        public void EliminateDestinationFromSignal(string mail, string signal)
        {
            signalMatchingList[signal].Remove(mail);
        }

        public void AddSignal(string signal)
        {
            signalMatchingList.Add(signal, null);
        }

        public List<string> GetListOfSupportedSignals()
        {
            List<string> signalList = null;

            foreach (var element in signalMatchingList)
            {
                if (element.Value != null || element.Value.Count != 0)
                {
                    signalList.Add(element.Key);
                }
            }
            return signalList;
        }

        public bool IsRecipientReceiveSignal(string mail, string signal)
        {
            foreach (var element in signalMatchingList)
            {
                if (element.Key == signal)
                {
                    element.Value.Contains(mail);
                    return true;
                }
            }
            return false;
        }

    }
}
